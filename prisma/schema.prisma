generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id         Int       @id @default(autoincrement())
  username   String    @unique @db.VarChar
  password   String    @db.VarChar
  name       String    @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  role_id    Int       @default(2)
  Role       Role      @relation(fields: [role_id], references: [id], onUpdate: Restrict)
  Product    Product[]
}

model Role {
  id         Int       @id @default(autoincrement())
  name       String    @unique @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  Account    Account[]
}

model Brand {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  Product    Product[]
}

model Category {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  Product    Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar
  description String?
  price       Float    @db.Real
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  brand_id    Int
  category_id Int
  account_id  Int
  image       String?
  Account     Account  @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Brand       Brand    @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Category    Category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
